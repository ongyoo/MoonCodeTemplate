//
//  SplashInteractor.swift
//  MoonCodeTemplate
//
//  Created by Komsit Chusangthong on 8/7/2568 BE.
//  Copyright (c) 2568 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SplashBusinessLogic {
    func initialize()
	func doSomething(request: Splash.Something.Request)
}

protocol SplashDataStore {
	//var name: String { get set }
}

final class SplashInteractor: SplashBusinessLogic, SplashDataStore {
	var presenter: SplashPresentationLogic?
    
    lazy var worker: SplashWorkerable? = {
        return SplashWorker()
    }()
    
    func initialize() {
        Task {
            await fetchExampleObjects()
        }
    }
	
	func doSomething(request: Splash.Something.Request) {
        /*
		worker = SplashWorker()
		worker?.doSomeWork()
		
		let response = Splash.Something.Response()
		presenter?.presentSomething(response: response)
         */
	}
    
    private func fetchExampleObjects() async {
        do {
            let result = try await worker?.getExampleObject(id: "7")
            switch result {
            case .success(let data):
                debugPrint(data)
            case .failure(let error):
                debugPrint(error)
            case .none:
                ()
            }
        } catch(let error) {
            debugPrint("‚ùå Error: \(error.localizedDescription)")
        }
    }
}
